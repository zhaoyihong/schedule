# SESC configuration file 
# modified from cmp.conf, which is contributed by Hou Rui
# ZhaoYiHong <zhaoyihong_at_126_dot_com>


# Please do not modify configuration otherwise specified.
##################################################################

##############################
# SYSTEM                     #
##############################

NoMigration    = false
tech           = 32    
pageSize       = 4096
fetchPolicy    = 'outorder'
issueWrongPath = true

technology = 'techParam'

procsPerNode  = 1				# total number of cores, fixed to 1.
								# Do not modify this!

# You can start modifying from the line below.
##################################################################

#1. multicore configuration.
cpucore[0] = 'SmallCore'	 
									 

#2. Issue width for each core types (i.e. small, mid, and large.)
issueSmall         = 3     	# small-processor issue width 

#3. IL1 & DL1 configuration for small cores
SmallIL1CacheSize  	= 32768
SmallIL1Assoc		= 8
SmallIL1AccessTime	= 2		# Need to be calculated by CACTI

SmallDL1CacheSize  	= 32768
SmallDL1Assoc		= 8
SmallDL1AccessTime	= 2		# Need to be calculated by CACTI

#4. L2 configuration 
L2CacheSize			= 32768
L2Assoc				= 8
L2AccessTime			= 2		# Need to be calculated by CACTI
L2NumBanks			= 2

#5. Common Configuration for caches
CacheBlockSize		= 64  

#6. Clock frequency configuration
Frequency = 1067000000
#7. Core type inorder/out-of-order configuration 
[SmallCore]
inorder         = false 			# does the core execute in order?


# Please do not modify below this line
##################################################################

 
#additional configuration for small core.
[SmallCore]
enableICache    = true 				# using separate caches for data and inst?
dataSource      = "DL1CacheSmall DL1Small"	# the first level of cache hierarchy for data.
instrSource     = "IL1CacheSmall IL1Small"	# the first level of cache hierarchy for instruction.


###############################
# clock-panalyzer input       #
###############################
[techParam]
clockTreeStyle = 1    # 1 for Htree or 2 for balHtree
tech       = 32     # nm
frequency  = $(Frequency)      # Hz
skewBudget = 20      # in ps
areaOfChip = 200    # in mm^2
loadInClockNode = 20    # in pF
optimalNumberOfBuffer = 3

##############################
# PROCESSORS' CONFIGURATION  #
##############################


### Small core configuration ###
[SmallCore]
frequency       = $(Frequency) 
areaFactor      = ($(issueSmall)*$(issueSmall)+0.1)/16  # Area compared to Alpha264 EV6
fetchWidth      = $(issueSmall)
instQueueSize   = 2*$(issueSmall)
issueWidth      = $(issueSmall)
retireWidth     = $(issueSmall)+1
decodeDelay     = 6
renameDelay     = 3
wakeupDelay     = 6                 # -> 6+3+6+1+1=17 branch mispred. penalty
maxBranches     = 4*$(issueSmall)
bb4Cycle        = 1
maxIRequests    = 4
interClusterLat = 2
intraClusterLat = 1
cluster[0]      = 'FXClusterIssueSmall'
cluster[1]      = 'FPClusterIssueSmall'
stForwardDelay  = 2 
maxLoads        = (4*$(issueSmall)+16)/2
maxStores       = (2*$(issueSmall)+16)/2
regFileDelay    = 3
robSize         = (9*$(issueSmall)+32)/2
intRegs         = 32+9*$(issueSmall)
fpRegs          = 32+9*$(issueSmall)
bpred           = 'BPredIssueX'
dtlb            = 'FXDTLBSmall'
itlb            = 'FXITLBSmall'
OSType          = 'dummy'


# integer functional units

[FXClusterIssueSmall]
winSize    = 4*$(issueSmall)+32 # number of entries in window
recycleAt  = 'Execute'
schedNumPorts = 4
schedPortOccp = 1
wakeUpNumPorts= 4
wakeUpPortOccp= 1
wakeupDelay   = 3
schedDelay    = 1 # Minimum latency like a intraClusterLat
iStoreLat  = 1
iStoreUnit = 'LDSTIssueSmall'
iLoadLat   = 1
iLoadUnit  = 'LDSTIssueSmall'
iALULat    = 1
iALUUnit   = 'ALUIssueSmall'
iBJLat     = 1
iBJUnit    = 'BJIssueSmall'
iDivLat    = 12
iDivUnit   = 'CALUIssueSmall'
iMultLat   = 4
iMultUnit  = 'CALUIssueSmall'

[LDSTIssueSmall]
Num = 1
Occ = 1

[ALUIssueSmall]
Num = 2
Occ = 1

[BJIssueSmall]
Num = 1
Occ = 1

[CALUIssueSmall]
Num = 2
Occ = 1

# floating point functional units

[FPClusterIssueSmall]
winSize    = 2*$(issueSmall)
recycleAt  = 'Execute'
schedNumPorts = 4
schedPortOccp = 1
wakeUpNumPorts= 4
wakeUpPortOccp= 1
wakeupDelay   = 3
schedDelay    = 1 # Minimum latency like a intraClusterLat
fpALULat   = 1
fpALUUnit  = 'FPIssueSmall'
fpMultLat  = 2
fpMultUnit = 'FPIssueSmall'
fpDivLat   = 10
fpDivUnit  = 'FPIssueSmall'

[FPIssueSmall]
Num = 1
Occ = 1

# memory translation mechanism
[FXDTLBSmall]
size       = 64*8
assoc      = 4
bsize      = 8
deviceType = 'cache'
numPorts   = 2
replPolicy = 'LRU'

[FXITLBSmall]
size       = 64*8
assoc      = 4
bsize      = 8
deviceType = 'cache'
numPorts   = 2
replPolicy = 'LRU'

# branch prediction mechanism

[BPredIssueX]
type          = "hybrid"
BTACDelay     = 0
l1size        = 1
l2size        = 16*1024
l2Bits        = 1
historySize   = 11
Metasize      = 16*1024
MetaBits      = 2
localSize     = 16*1024
localBits     = 2
btbSize       = 2048
btbBsize      = 1
btbAssoc      = 2
btbReplPolicy = 'LRU'
btbHistory    = 0
rasSize       = 32

##############################
# MEMORY SUBSYSTEM           #
##############################

# instruction source

[IL1CacheSmall]
deviceType    = 'icache'
size          = $(SmallIL1CacheSize)
assoc         = $(SmallIL1Assoc)
bsize         = $(CacheBlockSize)
writePolicy   = 'WT'
replPolicy    = 'LRU'
numPorts      = 2
portOccp      = 1
hitDelay      = $(SmallIL1AccessTime) 
missDelay     = 1                # this number is added to the hitDelay
MSHR          = "iMSHRSmall"
lowerLevel    = "L1L2IBus L1L2I shared"

[iMSHRSmall]
type = 'single'
size = 32
bsize = $(CacheBlockSize)

# data source
[DL1CacheSmall]
deviceType    = 'cache'
size          = $(SmallDL1CacheSize)
assoc         = $(SmallDL1Assoc)
bsize         = $(CacheBlockSize)
writePolicy   = 'WB'
replPolicy    = 'LRU'
numPorts      = 2                # one for L1, one for snooping
portOccp      = 2
hitDelay      = $(SmallDL1AccessTime)
missDelay     = $(SmallDL1AccessTime)+1 # exclusive, i.e., not added to hitDelay
displNotify   = false
MSHR          = "dMSHRSmall"
lowerLevel    = "L1L2DBus L1L2D shared"

[dMSHRSmall]
type = 'single'
size = 64
bsize = $(CacheBlockSize)

# bus between L1s and L2
[L1L2DBus]
deviceType = 'bus'
numPorts   = 1
portOccp   = 1             # Fixed.(i.e. more wires as a cacheline grows)
delay      = 1
lowerLevel = "L2Cache L2"


[L1L2IBus]
deviceType = 'bus'
numPorts   = 1
portOccp   = 1             # Fixed.(i.e. more wires as a cacheline grows) 
delay      = 1
lowerLevel = "L2Cache L2"

[L2Cache]
deviceType 	= 'cache'
inclusive	= false
size		= $(L2CacheSize)
assoc		= $(L2Assoc)
bsize		= $(CacheBlockSize)
nBanks		= $(L2NumBanks)
writePolicy	= 'WB'
replPolicy	= 'LRU'
numPorts	= 1
portOccp	= 1
bankNumPorts= 1
bankPortOccp= 1
hitDelay	= $(L2AccessTime)
missDelay	= 2 			# added to hitDelay
displNotify	= false
MSHR		= 'L2MSHR'
lowerLevel  = "MemoryBus memoryBus"

[L2MSHR]
size		= 64
type		= 'single'
bsize		= $(CacheBlockSize)

# Off-chip configurations
[MemoryBus]
deviceType = 'bus'
numPorts   = 1
portOccp   = 1             # Fully Pipelined.
delay      = ($(Frequency) / 3200000000) # 3.2Ghz bus, from Intel QuickPath arch.  
lowerLevel = "Memory memory"


[Memory]
deviceType    = 'niceCache'
size          = 64
assoc         = 1
bsize         = 64
writePolicy   = 'WB'
replPolicy    = 'LRU'
numPorts      = 1                
portOccp      = 1				 # Fully Pipelined
hitDelay      = $(Frequency) / 100000000	# Assuming 10 ns Memory 	
missDelay      = $(Frequency) / 100000000	# Assuming 10 ns Memory 	
MSHR          = NoMSHR
lowerLevel    = 'voidDevice'

[NoMSHR]
type = 'none'
size = 128
bsize = 64

[voidDevice]
deviceType    = 'void'

